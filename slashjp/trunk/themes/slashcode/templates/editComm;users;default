__section__
default
__description__
Edit comment preferences

* title = passed to titlebar
* user_edit = hashref of preferences
* h_check = boolean to check h?  hardthresh
* r_check = boolean to check r?  reparent
* n_check = boolean to check n?  noscores
* s_check = boolean to check s?  nosigs
* commentmodes_select = popup for comment modes
* commentsort_select = popup for comment sort
* highlightthresh_select = popup for highlight threshold
* uthreshold_select = popup for threshold
* posttype_select = popup for post type


__title__

__page__
users
__lang__
en_US
__name__
editComm
__template__
[% PROCESS prefs_titlebar tab_selected='comments' %]

[% note %]

[% admin_block %]

<FORM ACTION="[% env.script_name %]" METHOD="POST">

[% PROCESS formkey_tag %]

<INPUT TYPE="HIDDEN" NAME="formname"  VALUE="editcomm">
<INPUT TYPE="HIDDEN" NAME="op" VALUE="savecomm">
<INPUT TYPE="HIDDEN" NAME="uid" VALUE="[% user_edit.uid %]">

<TABLE ALIGN="CENTER" WIDTH="100%" BGCOLOR="[% user.bg.5 %]">
	<TR>
		<TD VALIGN=MIDDLE>
        	<P><B>Email Display</B>
		(currently
		[%- IF !user_edit.fakeemail; " not displayed";
		ELSE; ": <TT>"; user_edit.fakeemail | strip_literal; "</TT>";
		END %])<BR>
		[% IF !user_edit.emaildisplay.defined;
			IF user_edit.fakeemail %]
			<i>(Your current email address was apparently set before
			users' email addresses were forced to one of the below
			choices. Please pick one and click Save.)</i><BR>
			[% END;
			user_edit.emaildisplay = 0;
		END;
		IF user_edit.emaildisplay.defined;
			emaildisplay.${user_edit.emaildisplay} = 'CHECKED';
		END %]
                &nbsp;&nbsp;&nbsp;
		<INPUT TYPE="RADIO" NAME="emaildisplay" [% emaildisplay.0 %] 
		VALUE=0>&nbsp;
        	Do not display an e-mail address.<BR>
                &nbsp;&nbsp;&nbsp;
                <INPUT TYPE="RADIO" NAME="emaildisplay" [% emaildisplay.1 %] 
		VALUE=1>&nbsp;
                Show your email with random SPAM-armoring applied (this
		changes weekly).<BR> &nbsp;&nbsp;&nbsp;
                <INPUT TYPE="RADIO" NAME="emaildisplay" [% emaildisplay.2 %] 
		VALUE=2>&nbsp;
                Show your real email address without cowering behind childish
		anonymity or obfuscation.<BR>

		<P><B>Disable Sigs</B> (strip sig quotes from comments)
		<INPUT TYPE="CHECKBOX" NAME="nosigs"[% s_check %]>

		[% IF user.is_admin %]
		<P><B>Disable Spellchecker</B>
		<INPUT TYPE="CHECKBOX" NAME="no_spell"[% nospell_check %]>
		[% END %]

		<P><B>Display Mode</B>

		[% commentmodes_select %]

		<P><B>Sort Order</B> (self explanatory?  I hope?)

		[% commentsort_select %]

		<P><B>Threshold</B>

		[% uthreshold_select %]

		<BR>(comments scored less than this setting will be ignored.
		Anonymous posts start at 0, logged in posts start
		at 1.  Moderators add and subtract points according to
		the <A 
		HREF="[% constants.rootdir %]/moderation.shtml">Guidelines</A>)

		<P><B>Highlight Threshold</B>

		[% highlightthresh_select %]

		<BR>(comments scoring this are displayed even after an article spills into index mode)

		<P><B>Hard Thresholds</B> (Hides 'X Replies Below
		Current Threshold' Message from Threads)
		<INPUT TYPE="CHECKBOX" NAME="hardthresh"[% h_check %]>

		<P><B>Reparent Highly Rated Comments</B> (causes comments
		to be displayed even if they are replies to comments
		under current threshold)
		<INPUT TYPE="CHECKBOX" NAME="reparent"[% r_check %]>

		<P><B>Do Not Display Scores</B> (Hides score:
		They still <B>apply</B> you just don't see them.)
		<INPUT TYPE="CHECKBOX" NAME="noscores"[% n_check %]>

		<P><B>Signature Dash</B> (Prefix everyone's signature with "--" to make
		it blazingly obvious where comment ends and sig begins)
		<INPUT TYPE="CHECKBOX" NAME="sigdash"[% d_check %]>

		[%# doesn't this need to be flexible for sites that
		    already have different reasons, in the code?  why
		    not just loop over the reasons already existing,
		    like it did before?
		 %]
		<P><B><A NAME="reason_bonus">Reason Modifier</A></B> (assign a modifier to different moderation reasons)<br>
		<TABLE>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Insightful			</TD>
				<TD>	[% reason_select.Insightful %]	</TD>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Offtopic			</TD>
				<TD>	[% reason_select.Offtopic %]	</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Interesting			</TD>
				<TD>	[% reason_select.Interesting %]	</TD>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Flamebait			</TD>
				<TD>	[% reason_select.Flamebait %]	</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Funny				</TD>
				<TD>	[% reason_select.Funny %]	</TD>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Troll				</TD>
				<TD>	[% reason_select.Troll %]	</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Informative			</TD>
				<TD>	[% reason_select.Informative %]	</TD>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Redundant			</TD>
				<TD>	[% reason_select.Redundant %]	</TD>
			</TR>
		</TABLE>

		<P><B><A NAME="people_bonus_friend">P</A>e<A NAME="people_bonus_foe">o</A>p<A NAME="people_bonus_freak">l</A>e <A NAME="people_bonus_fan">M</A>o<A NAME="people_bonus_fof">d</A>i<A NAME="people_bonus_eof">f</A>ier</B> (assign a modifier to different people)<br>
		<TABLE>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Friend <IMG BORDER=0 SRC="[% constants.imagedir %]/friend.gif">				</TD>
				<TD>	[% people_select.friend %]	</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Fan <IMG BORDER=0 SRC="[% constants.imagedir %]/fan.gif">				</TD>
				<TD>	[% people_select.fan %]		</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Foe <IMG BORDER=0 SRC="[% constants.imagedir %]/foe.gif">				</TD>
				<TD>	[% people_select.foe %]		</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Freak <IMG BORDER=0 SRC="[% constants.imagedir %]/freak.gif">				</TD>
				<TD>	[% people_select.freak %]		</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Friends of Friends <IMG BORDER=0 SRC="[% constants.imagedir %]/fof.gif">				</TD>
				<TD>	[% people_select.fof %]		</TD>
			</TR>
			<TR>
				<TD>	&nbsp; &nbsp; &nbsp;		</TD>
				<TD>	Foes of Friends <IMG BORDER=0 SRC="[% constants.imagedir %]/eof.gif">				</TD>
				<TD>	[% people_select.eof %]		</TD>
			</TR>
		</TABLE>

		<P><B><A NAME="people_bonus_anonymous">Anonymous Modifier</A></B> (modifier assigned to anonymous posts)<BR>
		[% people_select.anonymous %]<br>

		<P><B><A NAME="karma_bonus">Karma Bonus</A></B> (modifier assigned to posts where the user has good karma)<BR>
		[% karma_bonus %]<br>

		<P><B><A NAME="subscriber_bonus">Subscriber Bonus</A></B> (modifier assigned to posts where the user was a subscriber)<BR>
		[% subscriber_bonus %]<br>

		<P><B><A NAME="new_user_bonus">New User Modifier</A></B> (assign modifiers to recently created accounts)<BR>
		[% new_user_percent_select %]% (new users in the last X percentage of the userbase)<br>
		[% new_user_bonus_select %] (modifier assigned to new user posts)<br>

		<P><B>Comment Limit</B> (only display this many comments, 
		for best results, set this to a low number and sort by score)
		If set above [% constants.breaking %], then it is ignored and
		[% constants.breaking / 2 %] is used instead.<BR>
		<INPUT TYPE="TEXT" NAME="commentlimit" SIZE="6" VALUE="[% user_edit.commentlimit %]">

		<P><B>Comment Byte Limit</B> (number of bytes of comments
		to display. If this is reached before comment limit, break
		the page, else use above comment limit)<BR>
		[% bytelimit_select %]<br>

		<P><B>Index Spill</B> (When an article has this many comments,
		it switches to indexed mode)<BR>
		<INPUT TYPE="TEXT" NAME="commentspill" VALUE="[% user_edit.commentspill %]" SIZE="3">

		<P><B><A NAME="clsmall">Small Comment Penalty</A></B> (Assign a bonus to smaller comments)<BR>
		<INPUT TYPE="TEXT" NAME="clsmall" VALUE="[% user_edit.clsmall %]" SIZE="6"> (length of comment in bytes)<BR>
		[% small_length_bonus_select %] (modifier assigned)<br>

		<P><B><A NAME="clbig">Long Comment Bonus</A></B> (Assign a bonus to lengthy comments)<BR>
		<INPUT TYPE="TEXT" NAME="clbig" VALUE="[% user_edit.clbig %]" SIZE="6"> (length of comment in bytes)<BR>
		[% long_length_bonus_select %] (modifier assigned)<br>

		<P><B>Max Comment Size</B> (Truncates long comments, and
		adds a "Read the rest" link.  Set really big to disable)<BR>
		<INPUT TYPE="TEXT" NAME="maxcommentsize" SIZE="6" VALUE="[% user_edit.maxcommentsize %]">

		<P><B>Comment Box Size</B> (Also applies to other large
		text boxes)<BR>
		Rows: <INPUT TYPE="TEXT" NAME="textarea_rows" SIZE="4" VALUE="[% user_edit.textarea_rows || constants.textarea_rows %]">
		Columns: <INPUT TYPE="TEXT" NAME="textarea_cols" SIZE="4" VALUE="[% user_edit.textarea_cols || constants.textarea_cols %]">

		<P><B>Comment Post Mode</B>

		[% posttype_select %]

[% IF user.karma > constants.goodkarma %]
		<P><B>No Karma Bonus</B>
		<INPUT TYPE="hidden" NAME="nobonus_present" VALUE="1">
		<INPUT TYPE="checkbox" NAME="nobonus"[% b_check %]>
[% END %]

[% IF user.is_subscriber %]
		<P><B>No Subscriber Bonus</B>
		<INPUT TYPE="hidden" NAME="nosubscriberbonus_present" VALUE="1">
		<INPUT TYPE="checkbox" NAME="nosubscriberbonus"[% sb_check %]>
[% END %]

[% IF constants.allow_anonymous && user.karma > -1 %]
		<P><B>Post Anonymously</B>
		<INPUT TYPE="hidden" NAME="postanon_present" VALUE="1">
		<INPUT TYPE="checkbox" NAME="postanon"[% p_check %]>
[% END %]


[% UNLESS user_edit.domaintags.defined; user_edit.domaintags=2; END %]
[% domaintags.${user_edit.domaintags} = 'CHECKED' -%]
		<P><B>Display Link Domains?</B> (shows the actual domain of any link in brackets)<BR>
		&nbsp;&nbsp;&nbsp;
		<INPUT TYPE="RADIO" NAME="domaintags" [% domaintags.0 %] 
		VALUE=0>&nbsp;
		Never show link domains<BR>
		&nbsp;&nbsp;&nbsp;
		<INPUT TYPE="RADIO" NAME="domaintags" [% domaintags.1 %] 
		VALUE=1>&nbsp;
		Show the links domain only in recommended situations<BR>
		&nbsp;&nbsp;&nbsp;
		<INPUT TYPE="RADIO" NAME="domaintags" [% domaintags.2 %] 
		VALUE=2>&nbsp;
		Always show link domains<BR>

		</TD>
	</TR>
</TABLE>
<P>
<INPUT TYPE="SUBMIT" VALUE="Save">
</FORM>

__seclev__
500
__version__
$Id$
