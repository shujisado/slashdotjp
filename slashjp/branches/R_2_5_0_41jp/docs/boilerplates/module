# This code is a part of Slash, and is released under the GPL.
# Copyright 1997-2004 by Open Source Development Network. See README
# and COPYING for more information, or see http://slashcode.com/.
# $Id$

package Slash::MODULE;

=head1 NAME

Slash::MODULE - SHORT DESCRIPTION for Slash


=head1 SYNOPSIS

	# basic example of usage


=head1 DESCRIPTION

LONG DESCRIPTION.


=head1 EXPORTED FUNCTIONS

=cut

use strict;
use base 'Exporter';
use vars qw($VERSION @EXPORT @EXPORT_OK);

($VERSION) = ' $Revision$ ' =~ /\$Revision:\s+([^\s]+)/;
@EXPORT	   = qw();
@EXPORT_OK = qw();


# every function below must include name, passed paramaters
# (if applicable), return value, side effects (if applicable),
# and dependencies (if applicable).  parameters in [] are
# optional.

#========================================================================

=head2 foo( [, ])

Foooooooo.

=over 4

=item Parameters

=over 4

=item

=back

=item Return value


=item Side effects


=item Dependencies

=back

=cut

sub foo {
	my($param1, $param2) = @_;
	my($other, @variable, $declarations, %go, $here);

	# some code

	return;
}

#========================================================================

=head1 NON-EXPORTED FUNCTIONS

=head2 foo2( [, ])

Foooooooo.

=over 4

=item Parameters

=over 4

=item

=back

=item Return value


=item Side effects


=item Dependencies

=back

=cut

sub foo2 {
	my($param1, $param2) = @_;
	my($other, @variable, $declarations, %go, $here);

	# some code

	return;
}


#========================================================================

=head1 PRIVATE FUNCTIONS

=head2 _foo3( [, ])

Foooooooo.

=over 4

=item Parameters

=over 4

=item

=back

=item Return value


=item Side effects


=item Dependencies

=back

=cut

sub _foo3 {
	my($param1, $param2) = @_;
	my($other, @variable, $declarations, %go, $here);

	# some code

	return;
}

1;

__END__


=head1 SEE ALSO

Slash(3).

=head1 VERSION

$Id$
